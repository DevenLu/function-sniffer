{"version":3,"file":"function-sniffer.js","sources":["../../src/utils/checkMethod.ts","../../src/utils/run.ts","../../src/utils/trigger.ts","../../src/main.ts"],"sourcesContent":["type Tresult = {\n    success: boolean,\n    func: object | ((...args: any[])=>any)\n};\n/**\n* @function {private} 检测方法是否可用\n* @param {string} funcName -- 方法名***.***.***\n* @param {object} base -- 方法所依附的对象 \n*/\nexport default function(funcName:string, base:object): Tresult{\n    const methodList = funcName.split('.'); // 方法名list\n    let readyFunc = base; // 检测合格的函数部分\n    let result:Tresult = {\n            'success': true,\n            'func': ()=>{}\n        }; // 返回的检测结果\n    let methodName; // 单个方法名\n    let i;\n\n    if(typeof base !== 'object'){\n        throw new Error('base is wrong type.');\n    }\n    \n    for (i = 0; i < methodList.length; i++) {\n        methodName = methodList[i];\n        if(typeof readyFunc !== 'object'){\n            result.success = false;\n            return result;\n        }else if (methodName in readyFunc) {\n            readyFunc = readyFunc[methodName];\n        } else {\n            result.success = false;\n            return result;\n        }\n    }\n\n    result.func = readyFunc;\n    return result;\n}","import checkMethod from './checkMethod';\nimport {\n    Tlist,\n    TcallbackFunc,\n} from './type';\n\nexport default function (\n    list:Tlist,\n    ...args\n) {\n    if (args.length < 1 || typeof args[0] != 'object') {\n        throw new Error('Sniffer.run parameter error');\n    }\n\n    // 0位为Object类型，方便做扩展\n    const name:string = args[0].name; // 函数名 \n    let subscribe:boolean = args[0].subscribe || false; // 订阅当函数可执行时，调用该函数, true:订阅; false:不订阅\n    const prompt:string = args[0].prompt || ''; // 是否显示提示语(当函数未能执行的时候)\n    const base:object = args[0].base || window; // 基准对象，函数查找的起点\n    const showPromptFn = args[0].showPromptFn || window.alert;\n    const funcArgs = Array.prototype.slice.call(args).slice(1); // 函数的参数列表\n    let result = checkMethod(name, base); // 检测结果\n\n    if (result.success) {\n        subscribe = false;\n        try {\n            return (result.func as Function).apply(result.func, funcArgs); // apply调整函数的指针指向\n        } catch (e) {\n            (typeof console != 'undefined') && console.log && console.log('错误:name=' + e.name + '; message=' + e.message);\n        }\n    } else {\n        if (prompt) {\n            // 输出提示语到页面，代码略\n            showPromptFn(prompt);\n        }\n    }\n\n    //将订阅的函数缓存起来\n    if (subscribe) {\n        let callbackFunc:TcallbackFunc = {\n            name: ''\n        }; // 临时存放需要回调的函数\n        callbackFunc.name = name;\n        callbackFunc.base = base;\n        callbackFunc.args = funcArgs;\n        list.push(callbackFunc);\n    }\n};","import checkMethod from './checkMethod'\nimport {\n    Tlist\n} from './type'\n\ntype Toption = {\n    name: string,\n    base: object\n};\n\nexport default function (list: Tlist, option: Toption):void {\n    if (typeof option !== 'object') {\n        throw new Error('Sniffer.trigger parameter error');\n    }\n\n    const funcName = option.name || ''; // 函数名\n    const base = option.base || window; // 基准对象，函数查找的起点\n    let newList:Tlist = []; // 用于更新list\n    let i; // 遍历list\n    let param; // 临时存储list[i]\n\n    if (funcName.length < 1) {\n        throw new Error('parameter name is require');\n    }\n\n    // 遍历list，执行对应的函数，并将其从缓存池list中删除\n    for (i = 0; i < list.length; i++) {\n        param = list[i];\n        if (param.name == funcName) {\n            let result = checkMethod(funcName, base);\n            if (result.success) {\n                try {\n                    return (result.func as Function).apply(result.func, param.args);\n                } catch (e) {\n                    (typeof console != 'undefined') && console.log && console.log('错误:name=' + e.name + '; message=' + e.message);\n                }\n            }\n        } else {\n            newList.push(param);\n        }\n    }\n\n    list = newList;\n};","import run from './utils/run';\nimport trigger from './utils/trigger';\nimport {\n    Tlist\n} from './utils/type'\n\nlet list:Tlist = [];\n\nexport default {\n    /**\n     * @function 函数转换接口，用于判断函数是否存在命名空间中，有则调用，无则不调用\n     * @version {create} 2015-11-30\n     * @description\n     * 用途：只设计用于延迟加载\n     * @example\n        ```javascript\n        // Wall.mytext.init(45, false);\n        // 调用：\n        Sniffer.run({'base':window, 'name':'Wall.mytext.init'}, 45, false);\n        // 或\n        Sniffer.run({'base':Wall, 'name':'mytext.init'}, 45, false);\n        // 如果不知道参数的个数，不能直接写，可以用apply的方式调用当前方法\n        Sniffer.run.apply(window, [ {'name':'Wall.mytext.init'}, 45, false ])\n        ```\n    */\n    run: function(){\n        const args = Array.prototype.slice.call(arguments);\n        return run(list, ...args);\n    },\n    /**\n    * @function 触发函数接口，调用已提前订阅的函数\n    * @param {object} option -- 需要调用的相关参数\n    *   {string} option.name -- 方法调用\n    *   {object} option.base -- 基点 \n    * @description\n    *   用途：只设计用于延迟加载\n    *   另外，调用trigger方法的前提是，订阅方法所在js已经加载并解析完毕\n    *   不管触发成功与否，都会清除list中对应的项\n    */\n    trigger: function(option){\n        return trigger(list, option);\n    }\n}"],"names":[],"mappings":"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"}